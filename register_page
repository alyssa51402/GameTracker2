// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:gametracker2/components/my_button.dart';
import 'package:gametracker2/components/my_textfield.dart';
import 'package:gametracker2/pages/enter_roster_page.dart';
import 'package:gametracker2/pages/login_page.dart';

class RegisterPage extends StatefulWidget {
  const RegisterPage({super.key});

  @override
  State<RegisterPage> createState() => _RegisterPageState();
} //LoginPage



class _RegisterPageState extends State<RegisterPage> {
  //text editing controllers
  final emailController = TextEditingController();
  final passwordController = TextEditingController();
  final comfirmPasswordController = TextEditingController();
  //for database 
  final teamNameController = TextEditingController(); 

  // sign user up method
  signUserUp() async {

    //show loading circle
    showDialog(
      context: context,
       builder: (context) {
        return const Center( 
          child: CircularProgressIndicator(),
        ); //center
       },
    ); //showDialog


    CollectionReference  collRef = FirebaseFirestore.instance.collection('teams');
           collRef.add({
            'teamName': teamNameController.text,
            'email': emailController.text,
            'password': passwordController.text,
            
           });

    

    //try creating the user 
    try {
      //check if password is comfirmed
      if(passwordController.text == comfirmPasswordController.text){
        await FirebaseAuth.instance.createUserWithEmailAndPassword(
        email: emailController.text, 
        password: passwordController.text,
      ); //await
      } else {
        //show error message
        showErrorMessage("Passwords Do not match");
      }

      /*Navigator.pushReplacement(
        context, MaterialPageRoute(builder: (context) => enterRosterPage())
      );*/

      //pop the loading circle
      Navigator.pop(context);

      
    } on FirebaseAuthException catch (e) {
      //pop the loading circle
      Navigator.pop(context);
      //wrong email
        //pop-up show error
        showErrorMessage(e.code);
    
    } //end try catch 

  } //signUserIn

  //error message to user
  void showErrorMessage(String message){
    showDialog(
          context: context,
          builder: (BuildContext context){
            return AlertDialog(
              title: Text(
                message,
              ),
            ); //AlertDialog
          }, //builder
        ); //showDialog
  } //showErrorMessage

 //signUserIn build 
  @override 
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.lightGreen,
      body: Column(children: [
        const SizedBox(height: 60),
        //Game Tracker Text
        Text( 
          'Game Tracker',
          style: TextStyle(
            color: Colors.green[900],
            //fontWeight: FontWeight.bold,
            fontSize: 50,
          ), //TextStyle
        ), //Text

        const SizedBox(height: 5),

        //sign up text
        Text(
          'Sign Up',
          style: TextStyle(
            color: Colors.green[900],
            fontWeight: FontWeight.bold,
            fontSize: 60,
          ), //TextStyle
        ), //Text

        const SizedBox(height: 10),

        //email textfield
        MyTextField(
          controller: emailController,
          hintText: 'Email',
          obscureText: false,
        ), //TextField email

        const SizedBox(height: 10),

        //password textfield
        MyTextField(
          controller: passwordController, 
          hintText: 'Password',
          obscureText: true, 
        ), //TextField Password

        const SizedBox(height: 10),

        //comfirm password textfield
        MyTextField(
          controller: comfirmPasswordController, 
          hintText: 'Comfirm Password',
          obscureText: true, 
        ), //TextField Password


        const SizedBox(height: 10),

        //team name textField
        MyTextField(
          controller: teamNameController,
          hintText: 'Team Name',
          obscureText: false, 
        ), //Textfield TeamName

        const SizedBox(height: 20),


        //sign in button 
        MyButton(
          text: "Next",
          /*onTap: ()  {
            signUserUp();
            Navigator.pushReplacement(context, MaterialPageRoute(builder: (context) => enterRosterPage()));
          }*/
          onTap: () async {
    try {
      // Call signUserUp() and wait for it to complete
      await signUserUp();

      // Once signUserUp() completes successfully, navigate to enterRosterPage
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => EnterRosterPage()),
      );
    } catch (e) {
      // Handle any errors that occur during sign-up
      print("Error during sign-up: $e");
      // Optionally, show an error message to the user
    }
  },
        ), //MyButton

        const SizedBox(height: 30),

        //Already a member? Register Now
        Row(
          mainAxisAlignment: MainAxisAlignment.center, 
          children: [
            Text(
              'Already have an account?',
              style: TextStyle(
                color: Colors.grey[800],
                fontSize: 30,
              ), //TextStyle
             ), //text
             const SizedBox(width: 4),
             GestureDetector(
              onTap:  () {
                Navigator.push(context, MaterialPageRoute(builder: (context) => LoginPage()));
              },
              child: const Text(
                "Login now",
                style: TextStyle( 
                  color: Colors.red,
                  fontWeight: FontWeight.bold,
                  fontSize: 30,
                ), //TextStyle
               ), //text
              ), //gestureDectector
          ], //children
        ),//row
        

        
      ]) //column
    ); //scaffold
  }} //_LoginPageState
