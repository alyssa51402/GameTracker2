// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables

import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:gametracker2/components/my_button.dart';
import 'package:gametracker2/components/my_textfield.dart';

class LoginPage extends StatefulWidget {
  LoginPage({super.key});

  @override
  State<LoginPage> createState() => _LoginPageState();
} //LoginPage

class _LoginPageState extends State<LoginPage> {
  //text editing controllers
  final emailController = TextEditingController();

  final passwordController = TextEditingController();

  // sign user in method
  void signUserIn() async {

    //show loading circle
    showDialog(
      context: context,
       builder: (context) {
        return const Center( 
          child: CircularProgressIndicator(),
        ); //center
       },
    ); //showDialog

    //try sign in 
    try {
      await FirebaseAuth.instance.signInWithEmailAndPassword(
      email: emailController.text, 
      password: passwordController.text,
      ); //await
      //pop the loading circle
      Navigator.pop(context);
    } on FirebaseAuthException catch (e) {
      //pop the loading circle
      Navigator.pop(context);
      //wrong email
      if(e.code == 'user-not-found') {
        //show error
        wrongEmailMessage();
      } 
      //wrong password
      else if (e.code == 'wrong-password') {
        //show error
        wrongPasswordMessage();
      } //end if, else if
    } //end try catch 

  } //signUserIn

  //Wrong email message
  void wrongEmailMessage() {
    showDialog( 
      context: context,
      builder: (context) {
        return const AlertDialog(
          title: Text('Incorrect Email'),
        ); //AlertDialog
      }, //buidler
    ); //showdialog
  }//wrongEmailMessage

  //Wrong password message
  void wrongPasswordMessage() {
    showDialog( 
      context: context,
      builder: (context) {
        return const AlertDialog(
          title: Text('Incorrect Password'),
        ); //AlertDialog
      }, //buidler
    ); //showdialog
  } //wrongPasswordMessage

 //signUserIn
  @override 
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.lightGreen,
      body: Column(children: [
        const SizedBox(height: 170),
        //Game Tracker Text
        Text( 
          'Game Tracker',
          style: TextStyle(
            color: Colors.green[900],
            fontWeight: FontWeight.bold,
            fontSize: 90,
          ), //TextStyle
        ), //Text

        const SizedBox(height: 40),

        //sign in text
        Text(
          'Sign In',
          style: TextStyle(
            color: Colors.green[900],
            fontSize: 60,
          ), //TextStyle
        ), //Text

        const SizedBox(height: 30),

        //email textfield
        MyTextField(
          controller: emailController,
          hintText: 'Email',
          obscureText: false,
        ), //TextField email

        const SizedBox(height: 20),

        //password textfield
        MyTextField(
          controller: passwordController, 
          hintText: 'Password',
          obscureText: true, 
        ), //TextField Password

        const SizedBox(height: 20),

        //sign in button 
        MyButton(
          onTap: signUserIn,
        ), //MyButton

        const SizedBox(height: 100),

        //sign up now button

      ]) //column
    ); //scaffold
  }} //_LoginPageState
